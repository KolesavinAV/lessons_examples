class Circle {
  //Координаты круга
  float x, y;
  //Его скорость
  float velocity = 2;
  //Его ускорение
  float acceleration = 1;
  //Его размер
  int size = 30;

//Конструктор класса, который принимает положение круга
//в координатной плоскости
  Circle(float x, float y) {
    this.x = x;
    this.y = y;
  }

//Функция падения круга вниз экрана
  void fall() {
    //Сначала к скорости прибавляется занчение ускорения
    velocity += acceleration;
    //Затем новая скорость прибалсяется к положению круга
    y += velocity;
  }

//Функция отображения круга
  void display() {
    noStroke();
    fill(255);
    ellipse(x, y, size, size);
  }
}

//Создание списка объектов класса Circle
ArrayList<Circle> circles = new ArrayList<Circle>();

void setup() {
  size(800, 600);
  background(40);
}

void draw() {
  background(40);
  //Вывод на экран количества элементов списка circles
  text("Количество шаров: " + circles.size(), width / 2, 30);
  
  //Переменная, отвечающая за индекс удаляемого элемента
  int removeIndex = -1;
  
  //Перебор всех элементов списка circles
  //Отображение всех обхектов и поиск индекса элемента,
  //который необходимо удалить (который находится за границей экрана)
  for (Circle circle : circles) {
    circle.fall();
    circle.display();

    //Если положение круга по высоте бульше значения размера экрана
    //значит этот элемент нужно удалить из списка
    if (circle.y > height) {
      //Получение индеска удаляемного элемента при помощи функции indexOf()
      //которая принимает в качетсве параметра удаляемый объект
      removeIndex = circles.indexOf(circle);
    }
  }

  //Если индекс удаляемого элемента положительный, то удалить элемент
  //с таким индексом
  if (removeIndex >= 0) {
    //Удаление элемента при помощи функции remove(), которая в качестве
    //принимает индекс удаляемого элемента
    circles.remove(removeIndex);
  }
}

//Функция, вызываемая при нажатии мыши
void mousePressed() {
  //Добавление в список нового объекта Circle с координатами,
  //равными мыши в данный момент времени
  circles.add(new Circle(mouseX, mouseY));
}